;
; Script generated by the ASCOM Driver Installer Script Generator 1.2.0.0
; Generated by EQMOD Project on 10/05/2008 (UTC)
;
[Setup]
AppName=EQMOD EQASCOM Telescope Driver
AppVerName=EQMOD EQASCOM Telescope Driver 2.00i
AppVersion=200i
OutputBaseFilename=EQASCOM_V200i_Setup

AppPublisher=EQMOD Project <EQMOD-owner@yahoogroups.com>
AppPublisherURL=mailto:EQMOD-owner@yahoogroups.com
AppSupportURL=http://tech.groups.yahoo.com/group/EQMOD/
AppUpdatesURL=http://eq-mod.sourceforge.net/
MinVersion=0,5.0.2195sp4
DefaultDirName={cf}\ASCOM\Telescope
DisableDirPage=yes
DisableProgramGroupPage=yes
OutputDir=.
Compression=lzma
SolidCompression=yes
; Put there by Platform if Driver Installer Support selected
WizardImageFile=installsplash.bmp
;LicenseFile=C:\Program Files\ASCOM\InstallGen\Resources\CreativeCommons.txt
; {cf}\ASCOM\Uninstall\Telescope folder created by Platform, always
UninstallFilesDir={cf}\ASCOM\Uninstall\Telescope\EQASCOM
DefaultGroupName = EQMOD

[Languages]
Name: english; MessagesFile: compiler:Default.isl

[Dirs]
Name: {cf}\ASCOM\Uninstall\Telescope\EQASCOM
Name: {pf}\EQMOD
Name: {pf}\EQMOD\PEC
; TODO: Add subfolders below {app} as needed (e.g. Name: "{app}\MyFolder")

;  Add an option to install the source files
[Tasks]
Name: source; Description: Install the Source files; Flags: unchecked
Name: SecondInstance; Description: Install two instances of EQASCOM; Flags: unchecked
Name: scripts; Description: Install sample scripts; 

[Files]
; Install EQASCOM driver - use ignoreversion to install over previous versions
Source: eqmod.exe; DestDir: {app}; Flags: ignoreversion; AfterInstall: RegASCOM1()
; Install EQASCOM driver - use ignoreversion to install over previous versions
Source: eqmod_2.exe; DestDir: {app}; Tasks: SecondInstance; Flags: ignoreversion; AfterInstall: RegASCOM3()
; Install Simulator - use ignoreversion to install over previous versions
Source: eqmod_sim.exe; DestDir: {app}; Flags: ignoreversion; AfterInstall: RegASCOM2()
Source: eqmod_custom.txt; DestDir: {app}; Flags: ignoreversion;
Source: CustomTrack.txt; DestDir: {pf}\EQMOD; Flags: ignoreversion;
Source: EQMOD_toolbox.exe; DestDir: {pf}\EQMOD; Flags: ignoreversion;
Source: eqascom_run.exe; DestDir: {pf}\EQMOD; Flags: ignoreversion;
Source: gpmonitor.exe; DestDir: {pf}\EQMOD; Flags: ignoreversion;
; Install language dlls and EQCNTRL dll - use ignoreversion to install over previous versions
Source: eq*.dll; DestDir: {app};  Flags: ignoreversion;
; install astro32.dll - won't install if a newer version already exists.
; Install EQCNTRL dll for toolbox use - use ignoreversion to install over previous versions
Source: eqcontrl.dll; DestDir: {pf}\EQMOD;  Flags: ignoreversion;
Source: astro32.dll; DestDir: {app};
; install scripts
Source: *.vbs; DestDir: {pf}\EQMOD\scripts; Tasks: scripts; Flags: ignoreversion;
; install wavs
Source: eqmod*.wav; DestDir: {app}; Flags: ignoreversion;
Source: EQMOD_Doc.pdf; DestDir: {pf}\EQMOD; Flags: isreadme ignoreversion;
Source: releasenotes.txt; DestDir: {pf}\EQMOD; Flags: isreadme ignoreversion;

; Optional source files (COM and .NET aware)
Source: *; Excludes: *.zip,*.exe, \bin\*, \obj\*, \doc\*; DestDir: {app}\Source\EQMOD\EQASCOM; Tasks: source; Flags: recursesubdirs

[Icons]
Name: "{group}\EQASCOM Manual"; Filename: {pf}\EQMOD\EQMOD_Doc.pdf; WorkingDir: "{pf}\EQMOD\"
Name: "{group}\EQASCOM\Release Notes"; Filename: {pf}\EQMOD\releasenotes.txt; WorkingDir: "{pf}\EQMOD\"
Name: "{group}\EQASCOM\EQASCOM_Run"; Filename: "{pf}\EQMOD\EQASCOM_RUN.EXE"; WorkingDir: "{app}"
Name: "{group}\EQASCOM\Toolbox"; Filename: {pf}\EQMOD\EQMOD_toolbox.exe; WorkingDir: "{pf}\EQMOD\"
Name: "{group}\Gamepad Monitor"; Filename: {pf}\EQMOD\gpmonitor.exe; WorkingDir: "{pf}\EQMOD\"
Name: "{group}\EQMOD wiki"; Filename: "http://www.welshdragoncomputing.ca/eqmod/doku.php"; WorkingDir: "{app}"
Name: "{group}\EQMOD Y! Group"; Filename: "http://tech.groups.yahoo.com/group/EQMOD/"; WorkingDir: "{app}"
Name: "{group}\Video Tutorials"; Filename: "http://www.youtube.com/playlist?list=PLBB117AE85EB6BF04"; WorkingDir: "{app}"

Name: "{group}\EQASCOM\Scripts\Start Simulator"; Filename: {pf}\EQMOD\scripts\eqascom_sim_startup.vbs; WorkingDir: "{app}"; Tasks: scripts
Name: "{group}\EQASCOM\Scripts\Kill Simulator"; Filename: {pf}\EQMOD\scripts\eqascom_sim_shutdown.vbs; WorkingDir: "{app}"; Tasks: scripts
Name: "{group}\EQASCOM\Scripts\Start EQASCOM"; Filename: {pf}\EQMOD\scripts\eqascom_startup.vbs; WorkingDir: "{app}"; Tasks: scripts
Name: "{group}\EQASCOM\Scripts\Kill EQASCOM"; Filename: {pf}\EQMOD\scripts\eqascom_shutdown.vbs; WorkingDir: "{app}"; Tasks: scripts
Name: "{group}\EQASCOM\Scripts\Setup EQASCOM"; Filename: {pf}\EQMOD\scripts\eqascom_setup.vbs; WorkingDir: "{app}"; Tasks: scripts

Name: "{group}\EQASCOM\Scripts\Start EQASCOM2"; Filename: {pf}\EQMOD\scripts\eqascom2_startup.vbs; WorkingDir: "{app}"; Tasks: scripts SecondInstance
Name: "{group}\EQASCOM\Scripts\Kill EQASCOM2"; Filename: {pf}\EQMOD\scripts\eqascom2_shutdown.vbs; WorkingDir: "{app}"; Tasks: scripts SecondInstance
Name: "{group}\EQASCOM\Scripts\Setup EQASCOM2"; Filename: {pf}\EQMOD\scripts\eqascom2_setup.vbs; WorkingDir: "{app}"; Tasks: scripts SecondInstance

Name: "{group}\EQASCOM\Scripts\Setup Simulator"; Filename: {pf}\EQMOD\scripts\eqascom_sim_setup.vbs; WorkingDir: "{app}"; Tasks: scripts
Name: "{group}\EQASCOM\Scripts\Read Mount Version"; Filename: {pf}\EQMOD\scripts\readmountver.vbs; WorkingDir: "{app}"; Tasks: scripts
Name: "{group}\EQASCOM\Scripts\Set ASCOM Park Position"; Filename: {pf}\EQMOD\scripts\setparkposition.vbs; WorkingDir: "{app}"; Tasks: scripts
Name: "{group}\EQASCOM\Scripts\Manual Sync"; Filename: {pf}\EQMOD\scripts\sync.vbs; WorkingDir: "{app}"; Tasks: scripts


;Only if COM Local Server
[Run]
Filename: {app}\EQMOD.exe; Parameters: /regserver
Filename: {app}\EQMOD_sim.exe; Parameters: /regserver
Filename: {app}\EQMOD_2.exe; Tasks: SecondInstance; Parameters: /regserver

;Only if COM Local Server
[UninstallRun]
Filename: {app}\EQMOD.exe; Parameters: /unregserver
Filename: {app}\EQMOD_sim.exe; Parameters: /unregserver
Filename: {app}\EQMOD_2.exe; Tasks: SecondInstance; Parameters: /unregserver

;  DCOM setup for COM local Server, needed for TheSky
[Registry]
; TODO: If needed set this value to the Telescope CLSID of your driver (mind the leading/extra '{')
#define AppClsid "{{xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx}"

; set the DCOM access control for TheSky on the Telescope interface
Root: HKCR; Subkey: CLSID\{#AppClsid}; ValueType: string; ValueName: AppID; ValueData: {#AppClsid}
Root: HKCR; Subkey: AppId\{#AppClsid}; ValueType: string; ValueData: ASCOM EQASCOM Telescope Driver
Root: HKCR; Subkey: AppId\{#AppClsid}; ValueType: string; ValueName: AppID; ValueData: {#AppClsid}
Root: HKCR; Subkey: AppId\{#AppClsid}; ValueType: dword; ValueName: AuthenticationLevel; ValueData: 1
; set the DCOM key for the executable as a whole
Root: HKCR; Subkey: AppId\EQMOD.exe; ValueType: string; ValueName: AppID; ValueData: {#AppClsid}
; CAUTION! DO NOT EDIT - DELETING ENTIRE APPID TREE WILL BREAK WINDOWS!
Root: HKCR; Subkey: AppId\{#AppClsid}; Flags: uninsdeletekey
Root: HKCR; Subkey: AppId\EQMOD.exe; Flags: uninsdeletekey

[Code]
//
// Before the installer UI appears, verify that the (prerequisite)
// ASCOM Platform is installed, including both Helper components.
// Helper is required for all typpes (COM and .NET)!
//
function InitializeSetup(): Boolean;
var
   H : Variant;
begin
   Result := FALSE;  // Assume failure
   try               // Will catch all errors including missing reg data
      H := CreateOLEObject('DriverHelper.Util');  // must be present
      Result := TRUE;
   except
   end;
   if(not Result) then
      MsgBox('The ASCOM Platform must be installed prior to installing this driver.', mbInformation, MB_OK);
end;

//
// Register and unregister the driver with the Chooser
// We already know that the Helper is available
//
procedure RegASCOM1();
var
   H: Variant;
begin
   H := CreateOleObject('DriverHelper.Profile');
   H.DeviceType := 'Telescope';
   H.Register('EQMOD.Telescope', 'EQMOD ASCOM HEQ5/6');
end;

procedure RegASCOM2();
var
   H: Variant;
begin
   H := CreateOleObject('DriverHelper.Profile');
   H.DeviceType := 'Telescope';
   H.Register('EQMOD_SIM.Telescope', 'EQMOD ASCOM Simulator');
end;

procedure RegASCOM3();
var
   H: Variant;
begin
   H := CreateOleObject('DriverHelper.Profile');
   H.DeviceType := 'Telescope';
   H.Register('EQMOD_2.Telescope', 'EQMOD_2 ASCOM HEQ5/6');
end;



