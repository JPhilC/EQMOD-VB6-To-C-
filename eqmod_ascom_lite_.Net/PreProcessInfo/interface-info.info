[segment [list* "Project1.Tracking" [segment [&interface-sub-decl [segment] [&boolean] "GetTrackTarget" (&arg-list [&arg [&double] "RA"] [&arg [&double] "DEC"]) #f] [&interface-sub-decl [segment] [&variant] "goto_TrackTarget" (&arg-list [&arg [&double] "RA"] [&arg [&double] "DEC"] [&arg [&boolean] "mute"]) #f] [&interface-sub-decl [segment] [&integer] "GetTrackFileIdx" (&arg-list [&arg [&integer] "StartIdx"] [&arg [&boolean] "Alert"]) #f] [&interface-sub-decl [segment] [&void] "TrackTimer" (&arg-list) #f] [&interface-sub-decl [segment] [&boolean] "Track_LoadFile" (&arg-list [&arg [&string] "FileName"]) #f] [&interface-sub-decl [segment] [&void] "LoadTrackingRates" (&arg-list) #f] [&interface-sub-decl [segment] [&void] "writeSiderealRate" (&arg-list) #f] [&interface-sub-decl [segment] [&void] "readSiderealRate" (&arg-list) #f] [&interface-sub-decl [segment] [&void] "readCustomRa" (&arg-list) #f] [&interface-sub-decl [segment] [&void] "writeCustomRa" (&arg-list) #f] [&interface-sub-decl [segment] [&void] "RestartTracking" (&arg-list) #f] [&interface-sub-decl [segment] [&void] "StopTrackingUpdates" (&arg-list) #f] [&interface-sub-decl [segment] [&void] "EQStartSidereal" (&arg-list) #f] [&interface-sub-decl [segment] [&void] "EQStartSidereal2" (&arg-list) #f] [&interface-sub-decl [segment] [&void] "Restore_CustomTracking" (&arg-list) #f] [&interface-sub-decl [segment] [&void] "Start_CustomTracking" (&arg-list) #f] [&interface-sub-decl [segment] [&void] "Start_CustomTracking2" (&arg-list) #f] [&interface-sub-decl [segment] [&void] "CustomMoveAxis" (&arg-list [&arg [&double] "axis"] [&arg [&double] "rate"] [&arg [&boolean] "init"] [&arg [&string] "RateName"]) #f] [&interface-sub-decl [segment] [&void] "EQMoveAxis" (&arg-list [&arg [&double] "axis"] [&arg [&double] "rate"]) #f] [&interface-sub-decl [segment] [&void] "ChangeDEC_by_Rate" (&arg-list [&arg (&byval) [&double] "rate"]) #f] [&interface-sub-decl [segment] [&void] "StartDEC_by_Rate" (&arg-list [&arg (&byval) [&double] "DEC_RATE"]) #f] [&interface-sub-decl [segment] [&void] "ChangeRA_by_Rate" (&arg-list [&arg (&byval) [&double] "rate"]) #f] [&interface-sub-decl [segment] [&void] "StartRA_by_Rate" (&arg-list [&arg (&byval) [&double] "RA_RATE"]) #f] [&vb-interface-prop (>>all) [segment] "gMoveAxisSlewing" [&boolean]] [&vb-interface-prop (>>all) [segment] "gMoveAxisDECSlew" [&boolean]] [&vb-interface-prop (>>all) [segment] "gMoveAxisRASlew" [&boolean]] [&vb-interface-prop (>>all) [segment] "gCustomTrackName" [&string]] [&vb-interface-prop (>>all) [segment] "gCustomTrackFile" [&string]] [&vb-interface-prop (>>all) [segment] "g_TrackingRates" [&type "TrackingRates"]] [&vb-interface-prop (>>all) [segment] "g_DECAxisRates" [&type "Rates"]] [&vb-interface-prop (>>all) [segment] "g_RAAxisRates" [&type "Rates"]] [&vb-interface-prop (>>all) [segment] "gTrackFactorDEC" [&double]] [&vb-interface-prop (>>all) [segment] "gTrackFactorRA" [&double]] [&vb-interface-prop (>>all) [segment] "gCustomTrackingOffsetDEC" [&integer]] [&vb-interface-prop (>>all) [segment] "gCustomTrackingOffsetRA" [&integer]]]] [list* "Project1.PEC" [segment [&interface-sub-decl [segment] [&void] "PEC_DispalyUpdate" (&arg-list [&arg [&type-dot [&id "VB"] [&id "PictureBox"]] "plot"]) #f] [&interface-sub-decl [segment] [&void] "PEC_StopCapture" (&arg-list) #f] [&interface-sub-decl [segment] [&void] "PEC_StartCapture" (&arg-list) #f] [&interface-sub-decl [segment] [&void] "PEC_MoveAxis" (&arg-list [&arg [&double] "axis"] [&arg [&double] "rate"]) #f] [&interface-sub-decl [segment] [&boolean] "PEC_Write_Table" (&arg-list [&arg [&double] "Index"] [&arg [&double] "Position"] [&arg [&double] "signal"]) #f] [&interface-sub-decl [segment] [&double] "NormalisePosition" (&arg-list [&arg (&byval) [&double] "Position"] [&arg [&double] "wormsteps"]) #f] [&interface-sub-decl [segment] [&void] "PEC_WriteParams" (&arg-list) #f] [&interface-sub-decl [segment] [&void] "PEC_ReadParams" (&arg-list) #f] [&interface-sub-decl [segment] [&void] "PEC_UpdateControls" (&arg-list) #f] [&interface-sub-decl [segment] [&void] "PEC_CaptureTimer" (&arg-list) #f] [&interface-sub-decl [segment] [&void] "PEC_Timer" (&arg-list) #f] [&interface-sub-decl [segment] [&boolean] "PEC_SaveFile" (&arg-list [&arg [&string] "FileName"] [&arg [&type "PECDefinition"] "PECDef"]) #f] [&interface-sub-decl [segment] [&void] "PEC_Save" (&arg-list) #f] [&interface-sub-decl [segment] [&boolean] "PEC_LoadFile" (&arg-list [&arg [&string] "FileName"]) #f] [&interface-sub-decl [segment] [&void] "PEC_Load" (&arg-list) #f] [&interface-sub-decl [segment] [&boolean] "PEC_SetPhase" (&arg-list [&arg [&string] "sPhase"]) #f] [&interface-sub-decl [segment] [&boolean] "PEC_SetGain" (&arg-list [&arg [&string] "sGain"]) #f] [&interface-sub-decl [segment] [&void] "PEC_OnUse" (&arg-list) #f] [&interface-sub-decl [segment] [&void] "PEC_Clear" (&arg-list) #f] [&interface-sub-decl [segment] [&void] "PEC_GainScroll_Change" (&arg-list) #f] [&interface-sub-decl [segment] [&void] "PEC_Unload" (&arg-list) #f] [&interface-sub-decl [segment] [&void] "PEC_StopTracking" (&arg-list) #f] [&interface-sub-decl [segment] [&void] "PEC_StartTracking" (&arg-list) #f] [&interface-sub-decl [segment] [&void] "PEC_Timestamp" (&arg-list) #f] [&interface-sub-decl [segment] [&void] "PEC_Initialise" (&arg-list) #f] [&interface-sub-decl [segment] [&void] "PECMode_click" (&arg-list) #f] [&interface-sub-decl [segment] [&void] "PEC_PhaseScroll_Change" (&arg-list) #f] [&interface-sub-decl [segment] [&void] "PEC_MagScroll_Change" (&arg-list) #f] [&interface-sub-decl [segment] [&void] "PEC_LoPassScroll_Change" (&arg-list) #f] [&vb-interface-prop (>>all) [segment] "gPEC_Debug" [&integer]] [&vb-interface-prop (>>all) [segment] "gPEC_AutoApply" [&integer]] [&vb-interface-prop (>>all) [segment] "gPEC_trace" [&integer]] [&vb-interface-prop (>>all) [segment] "gPEC_FileDir" [&string]] [&vb-interface-prop (>>all) [segment] "gPEC_DynamicRateAdjust" [&integer]] [&vb-interface-prop (>>all) [segment] "gPEC_TimeStampFiles" [&integer]] [&vb-interface-prop (>>all) [segment] "gPEC_PhaseAdjust" [&integer]] [&vb-interface-prop (>>all) [segment] "gPEC_mag" [&integer]] [&vb-interface-prop (>>all) [segment] "gPEC_filter_lowpass" [&integer]] [&vb-interface-prop (>>all) [segment] "gPEC_Capture_Cycles" [&integer]] [&vb-interface-prop (>>all) [segment] "gPEC_Gain" [&double]] [&vb-interface-prop (>>all) [segment] "gUsePEC" [&boolean]] [&vb-interface-prop (>>all) [segment] "gPEC_Enabled" [&boolean]] [&vb-interface-prop (>>all) [segment] "gLastPE" [&double]] [&vb-interface-prop (>>all) [segment] "PECDef1" [&type "PECDefinition"]]]] [list* "Project1.Nstar_Polar" [segment [&interface-sub-decl [segment] [&void] "Position_polar" (&arg-list [&arg [&double] "pscale"]) #f] [&interface-sub-decl [segment] [&type "Coord"] "PolarAlignDrift_Map" (&arg-list [&arg (&byval) [&double] "RA1"] [&arg (&byval) [&double] "DEC1"] [&arg (&byval) [&double] "RA2"] [&arg (&byval) [&double] "DEC2"] [&arg (&byval) [&double] "raprobe"] [&arg (&byval) [&double] "pscale"]) #f] [&interface-sub-decl [segment] [&void] "NStar_Polar_plot" (&arg-list [&arg [&double] "RA1"] [&arg [&double] "DEC1"] [&arg [&double] "RA2"] [&arg [&double] "DEC2"] [&arg [&double] "pscale"]) #f] [&interface-sub-decl [segment] [&double] "pxlate_y" (&arg-list [&arg [&double] "inpy"] [&arg [&double] "pscale"]) #f] [&interface-sub-decl [segment] [&double] "pxlate_x" (&arg-list [&arg [&double] "inpx"] [&arg [&double] "pscale"]) #f] [&interface-sub-decl [segment] [&void] "NStar_Polar_plot_init" (&arg-list [&arg [&integer] "stepcount"]) #f] [&interface-sub-decl [segment] [&void] "Plot_PolarAlign" (&arg-list [&arg [&double] "RA"] [&arg [&double] "DEC"] [&arg [&double] "pscale"]) #f] [&interface-sub-decl [segment] [&void] "PolarAlign_init" (&arg-list [&arg [&integer] "stepcount"]) #f] [&interface-sub-decl [segment] [&type "Coord"] "EQ_plAffineCartes" (&arg-list [&arg [&type "Coord"] "obj"]) #f] [&interface-sub-decl [segment] [&integer] "EQ_UpdateAffine_PolarDrift" (&arg-list [&arg [&double] "x"] [&arg [&double] "Y"]) #f] [&interface-sub-decl [segment] [&type "Coord"] "EQ_pl2Cs_Polar" (&arg-list [&arg [&type "Coord"] "obj"] [&arg [&double] "poffset"]) #f] [&interface-sub-decl [segment] [&type "Coord"] "EQNormalize_Polar" (&arg-list [&arg [&double] "Alt"] [&arg [&double] "Az"] [&arg [&double] "vhoriz"]) #f] [&interface-sub-decl [segment] [&double] "EQGet_Polar_Offset" (&arg-list [&arg [&double] "RA"] [&arg [&double] "DEC"] [&arg [&double] "radius"] [&arg [&double] "raprobe"] [&arg [&double] "pscale"]) #f]]] [list* "Project1.Mount" [segment [&interface-sub-decl [segment] [&long] "EQGetTotal360microstep" (&arg-list [&arg (&byval) [&long] "motor_id"]) #f] [&interface-sub-decl [segment] [&void] "readWormSteps" (&arg-list) #f] [&interface-sub-decl [segment] [&string] "readMountType2" (&arg-list) #f] [&interface-sub-decl [segment] [&void] "writeCustomMount" (&arg-list) #f] [&interface-sub-decl [segment] [&void] "readCustomMount" (&arg-list) #f] [&interface-sub-decl [segment] [&long] "CheckMount" (&arg-list [&arg [&long] "openstat"]) #f] [&vb-interface-prop (>>all) [segment] "gMountType" [&long]] [&vb-interface-prop (>>all) [segment] "gCustomDECWormSteps" [&double]] [&vb-interface-prop (>>all) [segment] "gCustomRAWormSteps" [&double]] [&vb-interface-prop (>>all) [segment] "gCustomDEC360" [&long]] [&vb-interface-prop (>>all) [segment] "gCustomRA360" [&long]] [&vb-interface-prop (>>all) [segment] "gCustomMount" [&integer]]]] [list* "Project1.Monitor" [segment [&interface-sub-decl [segment] [&boolean] "IsScreenSaverActivated" (&arg-list) #f] [&interface-sub-decl [segment] [&void] "ToggleMonitorPower" (&arg-list) #f] [&vb-interface-prop (>>all) [segment] "gMonitorMode" [&integer]] [&vb-interface-prop (>>all) [segment] "gMonitorState" [&integer]]]] [list* "Project1.Limits" [segment [&interface-sub-decl [segment] [&boolean] "RALimitsActive" (&arg-list) #f] [&interface-sub-decl [segment] [&boolean] "OutOfBounds" (&arg-list [&arg (&byval) [&double] "pos"]) #f] [&interface-sub-decl [segment] [&void] "readRALimit" (&arg-list) #f] [&interface-sub-decl [segment] [&void] "writeRAlimit" (&arg-list) #f] [&interface-sub-decl [segment] [&void] "SetRaLimitDefaults" (&arg-list) #f] [&interface-sub-decl [segment] [&double] "Limits_TimeToMeridian" (&arg-list) #f] [&interface-sub-decl [segment] [&double] "Limits_TimeToHorizon" (&arg-list) #f] [&interface-sub-decl [segment] [&void] "Limits_BuildLimitDef" (&arg-list) #f] [&interface-sub-decl [segment] [&void] "Limits_edit" (&arg-list) #f] [&interface-sub-decl [segment] [&void] "Limits_Clear" (&arg-list) #f] [&interface-sub-decl [segment] [&double] "Limits_GetAltLimit" (&arg-list [&arg [&double] "Az"]) #f] [&interface-sub-decl [segment] [&void] "Limits_Execute" (&arg-list) #f] [&interface-sub-decl [segment] [&void] "Limits_DeleteIdx" (&arg-list [&arg [&integer] "idx"]) #f] [&interface-sub-decl [segment] [&void] "Limits_Add" (&arg-list [&arg [&type "LIMIT"] "lim"]) #f] [&interface-sub-decl [segment] [&void] "Limits_Save" (&arg-list) #f] [&interface-sub-decl [segment] [&void] "Limits_ReadFile" (&arg-list [&arg [&string] "FileName"]) #f] [&interface-sub-decl [segment] [&void] "Limits_Load" (&arg-list) #f] [&interface-sub-decl [segment] [&void] "Limits_Init" (&arg-list) #f] [&vb-interface-prop (>>all) [segment] "gSupressHorizonLimits" [&boolean]] [&vb-interface-prop (>>all) [segment] "gAutoFlipEnabled" [&boolean]] [&vb-interface-prop (>>all) [segment] "gAutoFlipAllowed" [&boolean]] [&vb-interface-prop (>>all) [segment] "gLimitPark" [&integer]] [&vb-interface-prop (>>all) [segment] "gLimitSlews" [&integer]] [&vb-interface-prop (>>all) [segment] "gHorizonAlgorithm" [&integer]] [&vb-interface-prop (>>all) [segment] "LimitArray2" [&type "LIMIT"]] [&vb-interface-prop (>>all) [segment] "LimitArray" [&type "LIMIT"]] [&vb-interface-prop (>>all) [segment] "LimitStatus" [&type "TLIMIT_STATUS"]]]] [list* "Project1.Goto" [segment [&interface-sub-decl [segment] [&void] "readFlipGoto" (&arg-list) #f] [&interface-sub-decl [segment] [&void] "readGotoRate" (&arg-list) #f] [&interface-sub-decl [segment] [&void] "writeGotoRate" (&arg-list) #f] [&interface-sub-decl [segment] [&void] "ManageGoto" (&arg-list) #f] [&interface-sub-decl [segment] [&void] "StartSlew" (&arg-list [&arg (&byval) [&double] "targetRAEncoder"] [&arg (&byval) [&double] "targetDECEncoder"] [&arg (&byval) [&double] "currentRAEncoder"] [&arg (&byval) [&double] "currentDECEncoder"]) #f] [&interface-sub-decl [segment] [&void] "CalcEncoderGotoTargets" (&arg-list [&arg (&byval) [&double] "tRa"] [&arg (&byval) [&double] "tDec"] [&arg [&double] "RaEnc"] [&arg [&double] "DecEnc"]) #f] [&interface-sub-decl [segment] [&void] "CalcEncoderTargets" (&arg-list) #f] [&interface-sub-decl [segment] [&void] "radecAsyncSlew" (&arg-list [&arg (&byval) [&integer] "GotoRate"]) #f] [&vb-interface-prop (>>all) [segment] "gRAMeridianEast" [&double]] [&vb-interface-prop (>>all) [segment] "gRAMeridianWest" [&double]] [&vb-interface-prop (>>all) [segment] "gRA_Compensate" [&long]] [&vb-interface-prop (>>all) [segment] "gDECGotoRes" [&double]] [&vb-interface-prop (>>all) [segment] "gRAGotoRes" [&double]] [&vb-interface-prop (>>all) [segment] "gTargetDec" [&double]] [&vb-interface-prop (>>all) [segment] "gTargetRA" [&double]] [&vb-interface-prop (>>all) [segment] "gGotoResolution" [&integer]] [&vb-interface-prop (>>all) [segment] "gFRSlewCount" [&integer]] [&vb-interface-prop (>>all) [segment] "gSlewCount" [&long]] [&vb-interface-prop (>>all) [segment] "gMaxSlewCount" [&integer]] [&vb-interface-prop (>>all) [segment] "gCWUP" [&boolean]] [&vb-interface-prop (>>all) [segment] "gDisbleFlipGotoReset" [&integer]] [&vb-interface-prop (>>all) [segment] "gGotoRate" [&integer]] [&vb-interface-prop (>>all) [segment] "gGotoParams" [&type "GOTO_PARAMS"]]]] [list* "Project1.eqmodvector" [segment [&interface-sub-decl [segment] [&type "TriangleCoord"] "EQ_ChooseNearest3Points" (&arg-list [&arg [&double] "x"] [&arg [&double] "Y"]) #f] [&interface-sub-decl [segment] [&type "TriangleCoord"] "EQ_Choose_3Points" (&arg-list [&arg [&double] "x"] [&arg [&double] "Y"]) #f] [&interface-sub-decl [segment] [&type "Coord"] "EQ_Cartes2Spherical" (&arg-list [&arg [&double] "x"] [&arg [&double] "Y"] [&arg [&double] "r"] [&arg [&double] "RA"] [&arg [&double] "range"] [&arg [&double] "TOT"] [&arg [&double] "RACENTER"] [&arg [&double] "DECCENTER"]) #f] [&interface-sub-decl [segment] [&type "CartesCoord"] "EQ_Spherical2Cartes" (&arg-list [&arg [&double] "RA"] [&arg [&double] "DEC"] [&arg [&double] "TOT"] [&arg [&double] "RACENTER"] [&arg [&double] "DECCENTER"]) #f] [&interface-sub-decl [segment] [&type "Coord"] "EQ_PolarSpherical" (&arg-list [&arg [&double] "RA"] [&arg [&double] "DEC"] [&arg [&double] "TOT"] [&arg [&double] "RACENTER"] [&arg [&double] "DECCENTER"] [&arg [&double] "Latitude"] [&arg [&double] "range"]) #f] [&interface-sub-decl [segment] [&type "SphereCoord"] "EQ_SphericalPolar" (&arg-list [&arg [&double] "RA"] [&arg [&double] "DEC"] [&arg [&double] "TOT"] [&arg [&double] "RACENTER"] [&arg [&double] "DECCENTER"] [&arg [&double] "Latitude"]) #f] [&interface-sub-decl [segment] [&type "Coord"] "EQ_GetCenterPoint" (&arg-list [&arg [&type "Coord"] "p1"] [&arg [&type "Coord"] "p2"] [&arg [&type "Coord"] "p3"]) #f] [&interface-sub-decl [segment] [&integer] "EQ_CheckPoint_in_Triangle" (&arg-list [&arg [&double] "px"] [&arg [&double] "py"] [&arg [&double] "px1"] [&arg [&double] "py1"] [&arg [&double] "px2"] [&arg [&double] "py2"] [&arg [&double] "px3"] [&arg [&double] "py3"]) #f] [&interface-sub-decl [segment] [&double] "EQ_Triangle_Area" (&arg-list [&arg [&double] "px1"] [&arg [&double] "py1"] [&arg [&double] "px2"] [&arg [&double] "py2"] [&arg [&double] "px3"] [&arg [&double] "py3"]) #f] [&interface-sub-decl [segment] [&void] "EQ_Quicksort3" (&arg-list [&arg [&array [&double]] "List"] [&arg [&array [&double]] "Sublist1"] [&arg [&array [&double]] "Sublist2"] [&arg [&array [&double]] "Sublist3"] [&arg [&integer] "min"] [&arg [&integer] "max"]) #f] [&interface-sub-decl [segment] [&void] "EQ_Quicksort2" (&arg-list [&arg [&array [&type "Tdatholder"]] "List"] [&arg [&integer] "min"] [&arg [&integer] "max"]) #f] [&interface-sub-decl [segment] [&void] "EQ_Quicksort" (&arg-list [&arg [&array [&double]] "List"] [&arg [&array [&double]] "Sublist"] [&arg [&integer] "min"] [&arg [&integer] "max"]) #f] [&interface-sub-decl [segment] [&void] "EQ_FindLowest3" (&arg-list [&arg [&array [&double]] "List"] [&arg [&array [&integer]] "Sublist"] [&arg [&integer] "min"] [&arg [&integer] "max"]) #f] [&interface-sub-decl [segment] [&integer] "EQ_FindLowest" (&arg-list [&arg [&array [&double]] "List"] [&arg [&integer] "min"] [&arg [&integer] "max"]) #f] [&interface-sub-decl [segment] [&integer] "EQ_UpdateAffine" (&arg-list [&arg [&double] "x"] [&arg [&double] "Y"]) #f] [&interface-sub-decl [segment] [&integer] "EQ_UpdateTaki" (&arg-list [&arg [&double] "x"] [&arg [&double] "Y"]) #f] [&interface-sub-decl [segment] [&type "Coord"] "EQ_Cartes2Polar" (&arg-list [&arg [&double] "x"] [&arg [&double] "Y"] [&arg [&double] "r"] [&arg [&double] "RA"] [&arg [&double] "TOT"] [&arg [&double] "RACENTER"] [&arg [&double] "DECCENTER"]) #f] [&interface-sub-decl [segment] [&type "CartesCoord"] "EQ_Polar2Cartes" (&arg-list [&arg [&double] "RA"] [&arg [&double] "DEC"] [&arg [&double] "TOT"] [&arg [&double] "RACENTER"] [&arg [&double] "DECCENTER"]) #f] [&interface-sub-decl [segment] [&type "Coord"] "EQ_plTaki" (&arg-list [&arg [&type "Coord"] "obj"]) #f] [&interface-sub-decl [segment] [&type "Coord"] "EQ_plAffine2" (&arg-list [&arg [&type "Coord"] "obj"]) #f] [&interface-sub-decl [segment] [&type "Coord"] "EQ_plAffine" (&arg-list [&arg [&type "Coord"] "obj"]) #f] [&interface-sub-decl [segment] [&type "Coord"] "EQ_pl2Cs" (&arg-list [&arg [&type "Coord"] "obj"]) #f] [&interface-sub-decl [segment] [&type "Coord"] "EQ_sp2Cs2" (&arg-list [&arg [&type "Coord"] "obj"]) #f] [&interface-sub-decl [segment] [&type "Coord"] "EQ_sp2Cs" (&arg-list [&arg [&type "Coord"] "obj"]) #f] [&interface-sub-decl [segment] [&type "Coord"] "EQ_Transform_Affine" (&arg-list [&arg [&type "Coord"] "ob"]) #f] [&interface-sub-decl [segment] [&integer] "EQ_AssembleMatrix_Affine" (&arg-list [&arg [&double] "x"] [&arg [&double] "Y"] [&arg [&type "Coord"] "a1"] [&arg [&type "Coord"] "a2"] [&arg [&type "Coord"] "a3"] [&arg [&type "Coord"] "m1"] [&arg [&type "Coord"] "m2"] [&arg [&type "Coord"] "m3"]) #f] [&interface-sub-decl [segment] [&type "Coord"] "EQ_Transform_Taki" (&arg-list [&arg [&type "Coord"] "ob"]) #f] [&interface-sub-decl [segment] [&integer] "EQ_AssembleMatrix_Taki" (&arg-list [&arg [&double] "x"] [&arg [&double] "Y"] [&arg [&type "Coord"] "a1"] [&arg [&type "Coord"] "a2"] [&arg [&type "Coord"] "a3"] [&arg [&type "Coord"] "m1"] [&arg [&type "Coord"] "m2"] [&arg [&type "Coord"] "m3"]) #f] [&interface-sub-decl [segment] [&type "Matrix"] "GETPQ" (&arg-list [&arg [&type "Coord"] "p1"] [&arg [&type "Coord"] "p2"] [&arg [&type "Coord"] "p3"]) #f] [&interface-sub-decl [segment] [&type "Matrix"] "GETLMN" (&arg-list [&arg [&type "Coord"] "p1"] [&arg [&type "Coord"] "p2"] [&arg [&type "Coord"] "p3"]) #f] [&vb-interface-prop (>>all) [segment] "EQCT" [&type "Coord"]] [&vb-interface-prop (>>all) [segment] "EQMT" [&type "Matrix"]] [&vb-interface-prop (>>all) [segment] "EQMI_T" [&type "Matrix"]] [&vb-interface-prop (>>all) [segment] "EQLMN2" [&type "Matrix"]] [&vb-interface-prop (>>all) [segment] "EQLMN1" [&type "Matrix"]] [&vb-interface-prop (>>all) [segment] "EQCO" [&type "Coord"]] [&vb-interface-prop (>>all) [segment] "EQMM" [&type "Matrix"]] [&vb-interface-prop (>>all) [segment] "EQMI" [&type "Matrix"]] [&vb-interface-prop (>>all) [segment] "EQMQ" [&type "Matrix"]] [&vb-interface-prop (>>all) [segment] "EQMP" [&type "Matrix"]]]] [list* "Project1.EQMath" [segment [&interface-sub-decl [segment] [&integer] "GetNearest" (&arg-list [&arg (&byval) [&double] "RA"] [&arg (&byval) [&double] "DEC"]) #f] [&interface-sub-decl [segment] [&integer] "GetQuadrant" (&arg-list [&arg [&type "Coord"] "tmpcoord"]) #f] [&interface-sub-decl [segment] [&type "Coordt"] "DeltaSyncReverse_Matrix_Map" (&arg-list [&arg (&byval) [&double] "RA"] [&arg (&byval) [&double] "DEC"]) #f] [&interface-sub-decl [segment] [&type "Coordt"] "DeltaSync_Matrix_Map" (&arg-list [&arg (&byval) [&double] "RA"] [&arg (&byval) [&double] "DEC"]) #f] [&interface-sub-decl [segment] [&type "Coordt"] "Delta_Matrix_Reverse_Map" (&arg-list [&arg (&byval) [&double] "RA"] [&arg (&byval) [&double] "DEC"]) #f] [&interface-sub-decl [segment] [&type "Coordt"] "Delta_Matrix_Map" (&arg-list [&arg (&byval) [&double] "RA"] [&arg (&byval) [&double] "DEC"]) #f] [&interface-sub-decl [segment] [&double] "Delta_DEC_Map" (&arg-list [&arg (&byval) [&double] "DecEncoder"]) #f] [&interface-sub-decl [segment] [&double] "Delta_RA_Map" (&arg-list [&arg (&byval) [&double] "RAENCODER"]) #f] [&interface-sub-decl [segment] [&double] "GetSlowdown" (&arg-list [&arg (&byval) [&double] "deltaval"]) #f] [&interface-sub-decl [segment] [&double] "RangeHA" (&arg-list [&arg (&byval) [&double] "ha"]) #f] [&interface-sub-decl [segment] [&double] "Range90" (&arg-list [&arg (&byval) [&double] "vdeg"]) #f] [&interface-sub-decl [segment] [&double] "Range360" (&arg-list [&arg (&byval) [&double] "vdeg"]) #f] [&interface-sub-decl [segment] [&double] "Range24" (&arg-list [&arg (&byval) [&double] "vha"]) #f] [&interface-sub-decl [segment] [&type "PierSide2"] "SOP_RA" (&arg-list [&arg [&double] "vRA"] [&arg [&double] "pLongitude"]) #f] [&interface-sub-decl [segment] [&type "PierSide2"] "SOP_Pointing" (&arg-list [&arg (&byval) [&double] "DEC"]) #f] [&interface-sub-decl [segment] [&type "PierSide2"] "SOP_Physical" (&arg-list [&arg [&double] "vha"]) #f] [&interface-sub-decl [segment] [&type "PierSide2"] "SOP_DEC" (&arg-list [&arg (&byval) [&double] "DEC"]) #f] [&interface-sub-decl [segment] [&double] "EQnow_lst_time" (&arg-list [&arg [&double] "plong"] [&arg [&double] "ptime"]) #f] [&interface-sub-decl [segment] [&double] "EQnow_lst_norange" (&arg-list) #f] [&interface-sub-decl [segment] [&double] "EQnow_lst" (&arg-list [&arg [&double] "plong"]) #f] [&interface-sub-decl [segment] [&string] "FmtSexa" (&arg-list [&arg (&byval) [&double] "N"] [&arg [&boolean] "ShowPlus"]) #f] [&interface-sub-decl [segment] [&string] "printhex" (&arg-list [&arg [&double] "inpval"]) #f] [&interface-sub-decl [segment] [&long] "Get_DECEncoderfromDEC" (&arg-list [&arg [&double] "dec_in_degrees"] [&arg [&double] "Pier"] [&arg [&double] "encOffset0"] [&arg [&double] "Tot_enc"] [&arg [&long] "hmspr"]) #f] [&interface-sub-decl [segment] [&long] "Get_DECEncoderfromAltAz" (&arg-list [&arg [&double] "Alt_in_deg"] [&arg [&double] "Az_in_deg"] [&arg [&double] "pLongitude"] [&arg [&double] "pLatitude"] [&arg [&double] "encOffset0"] [&arg [&double] "Tot_enc"] [&arg [&double] "Pier"] [&arg [&long] "hmspr"]) #f] [&interface-sub-decl [segment] [&long] "Get_RAEncoderfromAltAz" (&arg-list [&arg [&double] "Alt_in_deg"] [&arg [&double] "Az_in_deg"] [&arg [&double] "pLongitude"] [&arg [&double] "pLatitude"] [&arg [&double] "encOffset0"] [&arg [&double] "Tot_enc"] [&arg [&long] "hmspr"]) #f] [&interface-sub-decl [segment] [&long] "Get_RAEncoderfromRA" (&arg-list [&arg [&double] "ra_in_hours"] [&arg [&double] "dec_in_degrees"] [&arg [&double] "pLongitude"] [&arg [&double] "encOffset0"] [&arg [&double] "Tot_enc"] [&arg [&long] "hmspr"]) #f] [&interface-sub-decl [segment] [&double] "Range_DEC" (&arg-list [&arg [&double] "decdegrees"]) #f] [&interface-sub-decl [segment] [&double] "Get_EncoderDegrees" (&arg-list [&arg [&double] "encOffset0"] [&arg [&double] "encoderval"] [&arg [&double] "Tot_enc"] [&arg [&long] "hmspr"]) #f] [&interface-sub-decl [segment] [&long] "Get_EncoderfromDegrees" (&arg-list [&arg [&double] "encOffset0"] [&arg [&double] "degval"] [&arg [&double] "Tot_enc"] [&arg [&double] "Pier"] [&arg [&long] "hmspr"]) #f] [&interface-sub-decl [segment] [&long] "Get_EncoderfromHours" (&arg-list [&arg [&double] "encOffset0"] [&arg [&double] "hourval"] [&arg [&double] "Tot_enc"] [&arg [&long] "hmspr"]) #f] [&interface-sub-decl [segment] [&double] "Get_EncoderHours" (&arg-list [&arg [&double] "encOffset0"] [&arg [&double] "encoderval"] [&arg [&double] "Tot_enc"] [&arg [&long] "hmspr"]) #f] [&interface-sub-decl [segment] [&void] "GetSystemTime" (&arg-list [&arg [&type "SYSTEMTIME"] "lpSystemTime"]) #f] [&vb-interface-prop (>>all) [segment] "gPolarAlign_DEC" [&double]] [&vb-interface-prop (>>all) [segment] "gPolarAlign_RA" [&double]] [&vb-interface-prop (>>all) [segment] "gDecHeight" [&double]] [&vb-interface-prop (>>all) [segment] "gRAHeight" [&double]] [&vb-interface-prop (>>all) [segment] "gPlot_dec_cur" [&double]] [&vb-interface-prop (>>all) [segment] "gplot_ra_cur" [&double]] [&vb-interface-prop (>>all) [segment] "gPlot_dec_pos" [&integer]] [&vb-interface-prop (>>all) [segment] "gPlot_ra_pos" [&integer]] [&vb-interface-prop (>>all) [segment] "gMAX_DEClevel" [&integer]] [&vb-interface-prop (>>all) [segment] "gMAX_RAlevel" [&integer]] [&vb-interface-prop (>>all) [segment] "gTaki3" [&double]] [&vb-interface-prop (>>all) [segment] "gTaki2" [&double]] [&vb-interface-prop (>>all) [segment] "gTaki1" [&double]] [&vb-interface-prop (>>all) [segment] "gAffine3" [&double]] [&vb-interface-prop (>>all) [segment] "gAffine2" [&double]] [&vb-interface-prop (>>all) [segment] "gAffine1" [&double]] [&vb-interface-prop (>>all) [segment] "gSpiral_AxisFlag" [&double]] [&vb-interface-prop (>>all) [segment] "gRightAscension_Len" [&long]] [&vb-interface-prop (>>all) [segment] "gDeclination_Len" [&long]] [&vb-interface-prop (>>all) [segment] "gRightAscension_Dir" [&double]] [&vb-interface-prop (>>all) [segment] "gDeclination_Dir" [&double]] [&vb-interface-prop (>>all) [segment] "gRightAscension_Start" [&double]] [&vb-interface-prop (>>all) [segment] "gDeclination_Start" [&double]] [&vb-interface-prop (>>all) [segment] "gSPIRAL_JUMP" [&long]] [&vb-interface-prop (>>all) [segment] "gRightAscensionRate" [&double]] [&vb-interface-prop (>>all) [segment] "gDeclinationRate" [&double]] [&vb-interface-prop (>>all) [segment] "gEQTimeDelta" [&double]] [&vb-interface-prop (>>all) [segment] "gEQPulsetimerflag" [&boolean]] [&vb-interface-prop (>>all) [segment] "gEQRAPulseStart" [&long]] [&vb-interface-prop (>>all) [segment] "gEQDECPulseStart" [&long]] [&vb-interface-prop (>>all) [segment] "gEQDECPulseEnd" [&long]] [&vb-interface-prop (>>all) [segment] "gEQRAPulseEnd" [&long]] [&vb-interface-prop (>>all) [segment] "gEQDECPulseDuration" [&long]] [&vb-interface-prop (>>all) [segment] "gEQRAPulseDuration" [&long]] [&vb-interface-prop (>>all) [segment] "gEQparkstatus" [&long]] [&vb-interface-prop (>>all) [segment] "gDECEncoderlastpos" [&long]] [&vb-interface-prop (>>all) [segment] "gRAEncoderlastpos" [&long]] [&vb-interface-prop (>>all) [segment] "gDECEncoderPark" [&long]] [&vb-interface-prop (>>all) [segment] "gRAEncoderPark" [&long]] [&vb-interface-prop (>>all) [segment] "gDECEncoderUNPark" [&long]] [&vb-interface-prop (>>all) [segment] "gRAEncoderUNPark" [&long]] [&vb-interface-prop (>>all) [segment] "gDECEncoderPolarHomeGoto" [&long]] [&vb-interface-prop (>>all) [segment] "gRAEncoderPolarHomeGoto" [&long]] [&vb-interface-prop (>>all) [segment] "gSideofPier" [&type "PierSide2"]] [&vb-interface-prop (>>all) [segment] "gEmulRA_Init" [&double]] [&vb-interface-prop (>>all) [segment] "gLast_time" [&double]] [&vb-interface-prop (>>all) [segment] "gCurrent_time" [&double]] [&vb-interface-prop (>>all) [segment] "gEmulNudge" [&boolean]] [&vb-interface-prop (>>all) [segment] "gEmulOneShot" [&boolean]] [&vb-interface-prop (>>all) [segment] "gEmulDEC" [&double]] [&vb-interface-prop (>>all) [segment] "gEmulRA" [&double]] [&vb-interface-prop (>>all) [segment] "gDECMoveAxis_Rate" [&double]] [&vb-interface-prop (>>all) [segment] "gRAMoveAxis_Rate" [&double]] [&vb-interface-prop (>>all) [segment] "gSlewStatus" [&boolean]] [&vb-interface-prop (>>all) [segment] "gTrackingStatus" [&long]] [&vb-interface-prop (>>all) [segment] "gRetry" [&long]] [&vb-interface-prop (>>all) [segment] "gTimeout" [&long]] [&vb-interface-prop (>>all) [segment] "gBaud" [&long]] [&vb-interface-prop (>>all) [segment] "gPort" [&string]] [&vb-interface-prop (>>all) [segment] "gSOP" [&double]] [&vb-interface-prop (>>all) [segment] "gha" [&double]] [&vb-interface-prop (>>all) [segment] "gAz" [&double]] [&vb-interface-prop (>>all) [segment] "gAlt" [&double]] [&vb-interface-prop (>>all) [segment] "gDec" [&double]] [&vb-interface-prop (>>all) [segment] "gRA" [&double]] [&vb-interface-prop (>>all) [segment] "gDECSync01" [&double]] [&vb-interface-prop (>>all) [segment] "gRASync01" [&double]] [&vb-interface-prop (>>all) [segment] "gDEC1Star" [&double]] [&vb-interface-prop (>>all) [segment] "gRA1Star" [&double]] [&vb-interface-prop (>>all) [segment] "gRA_Limit_West" [&double]] [&vb-interface-prop (>>all) [segment] "gRA_Limit_East" [&double]] [&vb-interface-prop (>>all) [segment] "gDECStatus" [&double]] [&vb-interface-prop (>>all) [segment] "gRAStatus_slew" [&boolean]] [&vb-interface-prop (>>all) [segment] "gRAStatus" [&double]] [&vb-interface-prop (>>all) [segment] "gDec_DegNoAdjust" [&double]] [&vb-interface-prop (>>all) [segment] "gDec_Degrees" [&double]] [&vb-interface-prop (>>all) [segment] "gRA_Hours" [&double]] [&vb-interface-prop (>>all) [segment] "gDec_Encoder" [&double]] [&vb-interface-prop (>>all) [segment] "gRA_Encoder" [&double]] [&vb-interface-prop (>>all) [segment] "gDECEncoder_Home_pos" [&double]] [&vb-interface-prop (>>all) [segment] "gHemisphere" [&long]] [&vb-interface-prop (>>all) [segment] "gElevation" [&double]] [&vb-interface-prop (>>all) [segment] "gLongitude" [&double]] [&vb-interface-prop (>>all) [segment] "gLatitude" [&double]] [&vb-interface-prop (>>all) [segment] "gDECWormPeriod" [&double]] [&vb-interface-prop (>>all) [segment] "gDECWormSteps" [&double]] [&vb-interface-prop (>>all) [segment] "gRAWormPeriod" [&double]] [&vb-interface-prop (>>all) [segment] "gRAWormSteps" [&double]] [&vb-interface-prop (>>all) [segment] "gTot_DEC" [&double]] [&vb-interface-prop (>>all) [segment] "gTot_RA" [&double]] [&vb-interface-prop (>>all) [segment] "gTot_step" [&double]] [&vb-interface-prop (>>all) [segment] "eqres" [&double]] [&vb-interface-prop (>>all) [segment] "gpl_interval" [&integer]] [&vb-interface-prop (>>all) [segment] "gRA_LastRate" [&double]] [&vb-interface-prop (>>all) [segment] "gMount_Features" [&long]] [&vb-interface-prop (>>all) [segment] "gMount_Ver" [&double]] [&vb-interface-prop (>>all) [segment] "gSiderealRate" [&double]] [&vb-interface-prop (>>all) [segment] "gEQ_MAXSYNC" [&double]] [&vb-interface-prop (>>all) [segment] "gYmouse" [&double]] [&vb-interface-prop (>>all) [segment] "gXmouse" [&double]] [&vb-interface-prop (>>all) [segment] "gYshift" [&double]] [&vb-interface-prop (>>all) [segment] "gXshift" [&double]]]] [list* "Project1.EQCONTRL" [segment [&interface-sub-decl [segment] [&long] "EQ_GetMountFeatures" (&arg-list) #f] [&interface-sub-decl [segment] [&long] "EQ_SetAxisRate" (&arg-list [&arg (&byval) [&long] "motor_id"] [&arg (&byval) [&double] "rate"] [&arg [&long] "hemisphere"] [&arg [&long] "direction"]) #f] [&interface-sub-decl [segment] [&long] "EQ_DebugLog" (&arg-list [&arg (&byval) [&string] "FileName"] [&arg (&byval) [&string] "comment"] [&arg (&byval) [&long] "operation"]) #f] [&interface-sub-decl [segment] [&long] "EQ_QueryMount" (&arg-list [&arg (&byval) [&long] "ptx"] [&arg (&byval) [&long] "prx"] [&arg (&byval) [&long] "sz"]) #f] [&interface-sub-decl [segment] [&long] "EQ_SendMountCommand" (&arg-list [&arg (&byval) [&long] "motor_id"] [&arg (&byval) [&byte] "command"] [&arg (&byval) [&long] "params"] [&arg (&byval) [&long] "Count"]) #f] [&interface-sub-decl [segment] [&long] "EQ_WriteByte" (&arg-list [&arg (&byval) [&byte] "bData"]) #f] [&interface-sub-decl [segment] [&long] "EQ_SetMountType" (&arg-list [&arg (&byval) [&long] "motor_type"]) #f] [&interface-sub-decl [segment] [&long] "EQ_SetOffset" (&arg-list [&arg (&byval) [&long] "motor_id"] [&arg (&byval) [&long] "doffset"]) #f] [&interface-sub-decl [segment] [&long] "EQ_WP" (&arg-list [&arg (&byval) [&long] "motor_id"] [&arg (&byval) [&long] "p_id"] [&arg (&byval) [&long] "value"]) #f] [&interface-sub-decl [segment] [&long] "EQ_GP" (&arg-list [&arg (&byval) [&long] "motor_id"] [&arg (&byval) [&long] "p_id"]) #f] [&interface-sub-decl [segment] [&long] "EQ_DriverVersion" (&arg-list) #f] [&interface-sub-decl [segment] [&long] "EQ_GetMountStatus" (&arg-list) #f] [&interface-sub-decl [segment] [&long] "EQ_GetMountVersion" (&arg-list) #f] [&interface-sub-decl [segment] [&long] "EQ_GetTotal360microstep" (&arg-list [&arg (&byval) [&long] "value"]) #f] [&interface-sub-decl [segment] [&long] "EQ_SetAutoguiderPortRate" (&arg-list [&arg (&byval) [&long] "motor_id"] [&arg (&byval) [&long] "guideportrate"]) #f] [&interface-sub-decl [segment] [&long] "EQ_MotorStop" (&arg-list [&arg (&byval) [&long] "value"]) #f] [&interface-sub-decl [segment] [&long] "EQ_SetCustomTrackRate" (&arg-list [&arg (&byval) [&long] "motor_id"] [&arg (&byval) [&long] "trackmode"] [&arg (&byval) [&long] "trackoffset"] [&arg (&byval) [&long] "trackbase"] [&arg (&byval) [&long] "hemisphere"] [&arg (&byval) [&long] "direction"]) #f] [&interface-sub-decl [segment] [&long] "EQ_SendCustomTrackRate" (&arg-list [&arg (&byval) [&long] "motor_id"] [&arg (&byval) [&long] "trackrate"] [&arg (&byval) [&long] "trackoffset"] [&arg (&byval) [&long] "trackdir"] [&arg (&byval) [&long] "hemisphere"] [&arg (&byval) [&long] "direction"]) #f] [&interface-sub-decl [segment] [&long] "EQ_SendGuideRate" (&arg-list [&arg (&byval) [&long] "motor_id"] [&arg (&byval) [&long] "trackrate"] [&arg (&byval) [&long] "guiderate"] [&arg (&byval) [&long] "guidedir"] [&arg (&byval) [&long] "hemisphere"] [&arg (&byval) [&long] "direction"]) #f] [&interface-sub-decl [segment] [&long] "EQ_StartRATrack" (&arg-list [&arg (&byval) [&long] "trackrate"] [&arg (&byval) [&long] "hemisphere"] [&arg (&byval) [&long] "direction"]) #f] [&interface-sub-decl [segment] [&long] "EQ_Slew" (&arg-list [&arg (&byval) [&long] "motor_id"] [&arg (&byval) [&long] "hemisphere"] [&arg (&byval) [&long] "direction"] [&arg (&byval) [&long] "rate"]) #f] [&interface-sub-decl [segment] [&long] "EQ_StartMoveMotor" (&arg-list [&arg (&byval) [&long] "motor_id"] [&arg (&byval) [&long] "hemisphere"] [&arg (&byval) [&long] "direction"] [&arg (&byval) [&long] "Steps"] [&arg (&byval) [&long] "stepslowdown"]) #f] [&interface-sub-decl [segment] [&long] "EQ_SetMotorValues" (&arg-list [&arg (&byval) [&long] "motor_id"] [&arg (&byval) [&long] "motor_val"]) #f] [&interface-sub-decl [segment] [&long] "EQ_GetMotorStatus" (&arg-list [&arg (&byval) [&long] "motor_id"]) #f] [&interface-sub-decl [segment] [&long] "EQ_GetMotorValues" (&arg-list [&arg (&byval) [&long] "motor_id"]) #f] [&interface-sub-decl [segment] [&long] "EQ_InitMotors" (&arg-list [&arg (&byval) [&long] "RA"] [&arg (&byval) [&long] "DEC"]) #f] [&interface-sub-decl [segment] [&long] "EQ_End" (&arg-list) #f] [&interface-sub-decl [segment] [&long] "EQ_Init" (&arg-list [&arg (&byval) [&string] "COMPORT"] [&arg (&byval) [&long] "baud"] [&arg (&byval) [&long] "timeout"] [&arg (&byval) [&long] "retry"]) #f]]] [list* "Project1.Common" [segment [&interface-sub-decl [segment] [&string] "ByteArrayToString" (&arg-list [&arg [&array [&byte]] "bytArray"]) #f] [&interface-sub-decl [segment] [&string] "GetPath" (&arg-list [&arg [&string] "str"]) #f] [&interface-sub-decl [segment] [&string] "StripPath" (&arg-list [&arg [&string] "str"]) #f] [&interface-sub-decl [segment] [&void] "EQSetOffsets" (&arg-list) #f] [&interface-sub-decl [segment] [&long] "EQStartMoveMotor" (&arg-list [&arg (&byval) [&long] "motor_id"] [&arg (&byval) [&long] "hemisphere"] [&arg (&byval) [&long] "direction"] [&arg (&byval) [&long] "Steps"] [&arg (&byval) [&long] "stepslowdown"]) #f] [&interface-sub-decl [segment] [&long] "EQSetMotorValues" (&arg-list [&arg (&byval) [&long] "motor_id"] [&arg [&long] "motor_val"]) #f] [&interface-sub-decl [segment] [&long] "EQGetMotorValues" (&arg-list [&arg (&byval) [&long] "motor_id"]) #f] [&interface-sub-decl [segment] [&void] "GetDllVer" (&arg-list) #f] [&interface-sub-decl [segment] [&void] "ResetFormPosition" (&arg-list) #f] [&interface-sub-decl [segment] [&void] "WriteFormPosition" (&arg-list) #f] [&interface-sub-decl [segment] [&void] "ReadFormPosition" (&arg-list) #f] [&interface-sub-decl [segment] [&long] "EQGP" (&arg-list [&arg (&byval) [&long] "motor_id"] [&arg (&byval) [&long] "p_id"]) #f] [&interface-sub-decl [segment] [&boolean] "RateIsInRange" (&arg-list [&arg (&byval) [&double] "rate"] [&arg (&byval) [&type "Rates"] "Rates"]) #f] [&interface-sub-decl [segment] [&double] "GetEmulRA_EQ" (&arg-list) #f] [&interface-sub-decl [segment] [&double] "GetEmulRA" (&arg-list) #f] [&interface-sub-decl [segment] [&void] "ShowExtendedMountFunctions" (&arg-list) #f] [&interface-sub-decl [segment] [&void] "readExtendedMountFunctions" (&arg-list) #f] [&interface-sub-decl [segment] [&void] "writePoleStar" (&arg-list) #f] [&interface-sub-decl [segment] [&void] "readPoleStar" (&arg-list) #f] [&interface-sub-decl [segment] [&void] "readPresetSlewRates" (&arg-list) #f] [&interface-sub-decl [segment] [&void] "writePresetSlewRates" (&arg-list) #f] [&interface-sub-decl [segment] [&void] "readAxisRev" (&arg-list) #f] [&interface-sub-decl [segment] [&void] "WriteAutoFlipData" (&arg-list) #f] [&interface-sub-decl [segment] [&void] "readAutoFlipData" (&arg-list) #f] [&interface-sub-decl [segment] [&void] "WriteAscomCompatibiity" (&arg-list) #f] [&interface-sub-decl [segment] [&void] "readAscomCompatibiity" (&arg-list) #f] [&interface-sub-decl [segment] [&void] "readDevelopmentOptions" (&arg-list) #f] [&interface-sub-decl [segment] [&void] "writeAxisRevDEC" (&arg-list) #f] [&interface-sub-decl [segment] [&void] "writeAxisRevRA" (&arg-list) #f] [&interface-sub-decl [segment] [&void] "readDriftVal" (&arg-list) #f] [&interface-sub-decl [segment] [&void] "writeDriftVal" (&arg-list) #f] [&interface-sub-decl [segment] [&void] "readRASyncCheckVal" (&arg-list) #f] [&interface-sub-decl [segment] [&void] "writeRASyncCheckVal" (&arg-list) #f] [&interface-sub-decl [segment] [&void] "readPulseguidepwidth" (&arg-list) #f] [&interface-sub-decl [segment] [&void] "writePulseguidepwidth" (&arg-list) #f] [&interface-sub-decl [segment] [&void] "writeportrateDec" (&arg-list [&arg [&string] "strRate"]) #f] [&interface-sub-decl [segment] [&void] "writeportrateRa" (&arg-list [&arg [&string] "strRate"]) #f] [&interface-sub-decl [segment] [&void] "readportrate" (&arg-list) #f] [&interface-sub-decl [segment] [&void] "readratebarstatePad" (&arg-list) #f] [&interface-sub-decl [segment] [&void] "readColorDat" (&arg-list) #f] [&interface-sub-decl [segment] [&void] "writeColorDat" (&arg-list [&arg [&long] "a1"] [&arg [&long] "a2"] [&arg [&long] "a3"] [&arg [&long] "b1"] [&arg [&long] "b2"] [&arg [&long] "b3"] [&arg [&long] "F1"]) #f] [&interface-sub-decl [segment] [&void] "readAlignProximity" (&arg-list) #f] [&interface-sub-decl [segment] [&void] "writeAlignProximity" (&arg-list) #f] [&interface-sub-decl [segment] [&void] "readAlignCheck" (&arg-list) #f] [&interface-sub-decl [segment] [&void] "writeAlignCheck2" (&arg-list) #f] [&interface-sub-decl [segment] [&void] "writeAlignCheck1" (&arg-list) #f] [&interface-sub-decl [segment] [&void] "readOnTop" (&arg-list) #f] [&interface-sub-decl [segment] [&void] "writeOnTop" (&arg-list) #f] [&interface-sub-decl [segment] [&void] "writeratebarstatePad" (&arg-list) #f] [&interface-sub-decl [segment] [&void] "readratebarstateAlign" (&arg-list) #f] [&interface-sub-decl [segment] [&void] "writeratebarstateAlign" (&arg-list) #f] [&interface-sub-decl [segment] [&void] "readratebarstateHC" (&arg-list) #f] [&interface-sub-decl [segment] [&void] "writeratebarstateHC" (&arg-list) #f] [&interface-sub-decl [segment] [&void] "resetsync" (&arg-list) #f] [&interface-sub-decl [segment] [&void] "writePolarHomeGoto" (&arg-list [&arg (&byval) [&integer] "StartPos"]) #f] [&interface-sub-decl [segment] [&void] "readPolarHomeGoto" (&arg-list) #f] [&interface-sub-decl [segment] [&void] "WriteAlignMap" (&arg-list) #f] [&interface-sub-decl [segment] [&void] "WriteSyncMap" (&arg-list) #f] [&interface-sub-decl [segment] [&void] "writelastpos" (&arg-list) #f] [&interface-sub-decl [segment] [&void] "readlastpos" (&arg-list) #f] [&interface-sub-decl [segment] [&boolean] "SyncToRADEC" (&arg-list [&arg (&byval) [&double] "RightAscension"] [&arg (&byval) [&double] "Declination"] [&arg (&byval) [&double] "pLongitude"] [&arg (&byval) [&long] "pHemisphere"]) #f] [&interface-sub-decl (&renames-to "Main_Renamed") [segment] [&void] "Main" (&arg-list) #f] [&interface-sub-decl [segment] [&integer] "EnableCloseButton" (&arg-list [&arg (&byval) [&long] "hwnd"] [&arg [&boolean] "Enable"]) #f] [&interface-sub-decl [segment] [&void] "PutWindowNormal" (&arg-list [&arg [&type "Form"] "pFrm"]) #f] [&interface-sub-decl [segment] [&void] "PutWindowOnTop" (&arg-list [&arg [&type "Form"] "pFrm"]) #f] [&vb-interface-prop (>>all) [segment] "gDisableSyncLimit" [&boolean]] [&vb-interface-prop (>>all) [segment] "gInitResult" [&long]] [&vb-interface-prop (>>all) [segment] "ClientCount" [&integer]] [&vb-interface-prop (>>all) [segment] "gCommErrorStop" [&integer]] [&vb-interface-prop (>>all) [segment] "gPulseguideRateDec" [&double]] [&vb-interface-prop (>>all) [segment] "gPulseguideRateRa" [&double]] [&vb-interface-prop (>>all) [segment] "gLstDisplayMode" [&integer]] [&vb-interface-prop (>>all) [segment] "gPoleStarIdx" [&integer]] [&vb-interface-prop (>>all) [segment] "gDriftComp" [&integer]] [&vb-interface-prop (>>all) [segment] "gBacklashDec" [&integer]] [&vb-interface-prop (>>all) [segment] "gPointFilter" [&integer]] [&vb-interface-prop (>>all) [segment] "gAdvanced" [&integer]] [&vb-interface-prop (>>all) [segment] "g3PointAlgorithm" [&integer]] [&vb-interface-prop (>>all) [segment] "gDllVer" [&double]] [&vb-interface-prop (>>all) [segment] "gCoordType" [&long]] [&vb-interface-prop (>>all) [segment] "gAlignmentMode" [&integer]] [&vb-interface-prop (>>all) [segment] "gShowPolarAlign" [&integer]] [&vb-interface-prop (>>all) [segment] "gVersion" [&string]] [&vb-interface-prop (>>all) [segment] "gPolHa" [&double]] [&vb-interface-prop (>>all) [segment] "gPolarReticuleEpoch" [&double]] [&vb-interface-prop (>>all) [segment] "gPoleStarReticuleDec" [&double]] [&vb-interface-prop (>>all) [segment] "gPoleStarDecJ2000" [&double]] [&vb-interface-prop (>>all) [segment] "gPoleStarRaJ2000" [&double]] [&vb-interface-prop (>>all) [segment] "gPoleStarDec" [&double]] [&vb-interface-prop (>>all) [segment] "gPoleStarRa" [&double]] [&vb-interface-prop (>>all) [segment] "gCurrentRatePreset" [&integer]] [&vb-interface-prop (>>all) [segment] "gPresetSlewRatesCount" [&integer]] [&vb-interface-prop (>>all) [segment] "gRateButtons" [&integer]] [&vb-interface-prop (>>all) [segment] "gPresetSlewRates" [&double]] [&vb-interface-prop (>>all) [segment] "m_telescope" [&type "Telescope"]] [&vb-interface-prop (>>all) [segment] "oProfile" [&type-dot [&id "DriverHelper"] [&id "Profile"]]] [&vb-interface-prop (>>all) [segment] "gAscomCompatibility" [&type "ASCOM_COMPLIANCE"]]]] [list* "Project1.Alignment" [segment [&interface-sub-decl [segment] [&void] "AlignmentStarsUnpark" (&arg-list) #f] [&interface-sub-decl [segment] [&void] "AligmentStarsPark" (&arg-list) #f] [&interface-sub-decl [segment] [&void] "WriteParkOptions" (&arg-list) #f] [&interface-sub-decl [segment] [&void] "ReadParkOptions" (&arg-list) #f] [&interface-sub-decl [segment] [&integer] "GetPresetIdx" (&arg-list) #f] [&interface-sub-decl [segment] [&void] "SavePresetIdx" (&arg-list [&arg [&integer] "idx"]) #f] [&interface-sub-decl [segment] [&boolean] "LoadAlignmentPreset" (&arg-list [&arg [&integer] "preset"]) #f] [&interface-sub-decl [segment] [&void] "SaveAlignmentStars" (&arg-list [&arg [&integer] "preset"] [&arg [&string] "presetName"]) #f] [&interface-sub-decl [segment] [&void] "ActivateMatrix" (&arg-list) #f] [&interface-sub-decl [segment] [&void] "SendtoMatrix" (&arg-list) #f] [&interface-sub-decl [segment] [&boolean] "EQ_NPointAppend" (&arg-list [&arg (&byval) [&double] "RightAscension"] [&arg (&byval) [&double] "Declination"] [&arg (&byval) [&double] "pLongitude"] [&arg (&byval) [&long] "pHemisphere"]) #f] [&interface-sub-decl [segment] [&void] "CalcPromximityLimits" (&arg-list [&arg (&byval) [&integer] "range"]) #f] [&interface-sub-decl [segment] [&void] "EQ_NPointDelete" (&arg-list [&arg (&byval) [&long] "Index"]) #f] [&vb-interface-prop (>>all) [segment] "my_PointsC" [&type "Coord"]] [&vb-interface-prop (>>all) [segment] "ct_PointsC" [&type "Coord"]] [&vb-interface-prop (>>all) [segment] "my_Points" [&type "Coord"]] [&vb-interface-prop (>>all) [segment] "ct_Points" [&type "Coord"]] [&vb-interface-prop (>>all) [segment] "AlignmentStars" [&type "AlignmentData"]] [&vb-interface-prop (>>all) [segment] "gAlignmentStars_count" [&integer]] [&vb-interface-prop (>>all) [segment] "gDEC_GOTO" [&double]] [&vb-interface-prop (>>all) [segment] "gRA_GOTO" [&double]] [&vb-interface-prop (>>all) [segment] "ProximityDec" [&long]] [&vb-interface-prop (>>all) [segment] "ProximityRa" [&long]] [&vb-interface-prop (>>all) [segment] "gSaveAPresetOnAppend" [&integer]] [&vb-interface-prop (>>all) [segment] "gSaveAPresetOnPark" [&integer]] [&vb-interface-prop (>>all) [segment] "gLoadAPresetOnUnpark" [&integer]] [&vb-interface-prop (>>all) [segment] "gMaxCombinationCount" [&integer]] [&vb-interface-prop (>>all) [segment] "gSelectStar" [&long]] [&vb-interface-prop (>>all) [segment] "gThreeStarEnable" [&boolean]]]] [list* "Project1.Persist" [segment [&interface-sub-decl [segment] [&string] "GetIniPath" (&arg-list) #f] [&interface-sub-decl [segment] [&string] "ReadIniValueEx" (&arg-list [&arg [&string] "Variable"] [&arg [&string] "IniKey"] [&arg [&string] "filepath"]) #f] [&interface-sub-decl [segment] [&void] "WriteIniValueEx" (&arg-list [&arg [&string] "PutVariable"] [&arg [&string] "PutValue"] [&arg [&string] "IniKey"] [&arg [&string] "filepath"]) #f] [&interface-sub-decl [segment] [&void] "DeleteSection" (&arg-list [&arg [&string] "IniKey"] [&arg [&string] "filepath"]) #f] [&interface-sub-decl [segment] [&string] "ReadIniValue" (&arg-list [&arg [&string] "Variable"]) #f] [&interface-sub-decl [segment] [&void] "WriteIniValue" (&arg-list [&arg [&string] "PutVariable"] [&arg [&string] "PutValue"]) #f] [&interface-sub-decl [segment] [&void] "Retrieve" (&arg-list) #f] [&interface-sub-decl [segment] [&void] "Store" (&arg-list) #f]]] [list* "Project1.eqmodnmea~Events" [segment [&interface-sub-decl [segment] [&void] "EQgpstime" (&arg-list [&arg (&byval) [&string] "time"]) #f] [&interface-sub-decl [segment] [&void] "EQgpsdate" (&arg-list [&arg (&byval) [&string] "satDate"]) #f] [&interface-sub-decl [segment] [&void] "EQgpsnow" (&arg-list [&arg (&byval) [&string] "Satnow"] [&arg (&byval) [&string] "hh"] [&arg (&byval) [&string] "mm"] [&arg (&byval) [&string] "ss"] [&arg (&byval) [&string] "mn"] [&arg (&byval) [&string] "dd"] [&arg (&byval) [&string] "yy"]) #f] [&interface-sub-decl [segment] [&void] "EQgpsfixok" (&arg-list) #f] [&interface-sub-decl [segment] [&void] "EQgpsfixnotok" (&arg-list) #f] [&interface-sub-decl [segment] [&void] "EQgpsaltitude" (&arg-list [&arg (&byval) [&string] "altitude"]) #f] [&interface-sub-decl [segment] [&void] "EQgpsunit" (&arg-list [&arg (&byval) [&string] "altitudeUnits"]) #f]]] [list* "Project1.eqmodnmea" [segment [&interface-sub-decl [segment] [&boolean] "scan" (&arg-list [&arg (&byval) [&string] "sbuf"]) #f] [&event-decl [&void] "EQgpsunit" (&arg-list [&arg (&byval) [&string] "altitudeUnits"])] [&event-decl [&void] "EQgpsaltitude" (&arg-list [&arg (&byval) [&string] "altitude"])] [&event-decl [&void] "EQgpsfixnotok" (&arg-list)] [&event-decl [&void] "EQgpsfixok" (&arg-list)] [&event-decl [&void] "EQgpsnow" (&arg-list [&arg (&byval) [&string] "Satnow"] [&arg (&byval) [&string] "hh"] [&arg (&byval) [&string] "mm"] [&arg (&byval) [&string] "ss"] [&arg (&byval) [&string] "mn"] [&arg (&byval) [&string] "dd"] [&arg (&byval) [&string] "yy"])] [&event-decl [&void] "EQgpsdate" (&arg-list [&arg (&byval) [&string] "satDate"])] [&event-decl [&void] "EQgpstime" (&arg-list [&arg (&byval) [&string] "time"])] [&event-decl [&void] "EQgpsposition" (&arg-list [&arg (&byval) [&string] "gnmlatitude"] [&arg (&byval) [&string] "gnmlongitude"] [&arg (&byval) [&string] "lathm"] [&arg (&byval) [&string] "lath"] [&arg (&byval) [&string] "latm"] [&arg (&byval) [&string] "lonhm"] [&arg (&byval) [&string] "lonh"] [&arg (&byval) [&string] "lonm"])]]] [list* "Project1.TrackingRates" [segment [&vb-interface-prop (>>get) [segment] "NewEnum" [&type-dot [&id "stdole"] [&id "IEnumVARIANT"]]] [&interface-sub-decl [segment] [&type "DriveRates"] "GetItem" (&arg-list [&arg (&byval) [&long] "Index"]) #t] [&vb-interface-prop (>>get) [segment] "Count" [&long]]]] [list* "Project1.Telescope" [segment [&interface-sub-decl [segment] [&void] "ReadAlignMap" (&arg-list) #f] [&interface-sub-decl [segment] [&void] "ReadSyncMap" (&arg-list) #f] [&interface-sub-decl [segment] [&void] "ReadComPortSettings" (&arg-list) #f] [&interface-sub-decl [segment] [&void] "IncClientCount" (&arg-list) #f] [&interface-sub-decl [segment] [&void] "SetClientCount" (&arg-list [&arg (&byval) [&double] "Count"]) #f] [&interface-sub-decl [segment] [&void] "StopClientCount" (&arg-list) #f] [&interface-sub-decl [segment] [&void] "UnPark" (&arg-list) #f] [&interface-sub-decl [segment] [&void] "SyncToTarget" (&arg-list) #f] [&interface-sub-decl [segment] [&void] "SyncToCoordinates" (&arg-list [&arg (&byval) [&double] "RightAscension"] [&arg (&byval) [&double] "Declination"]) #f] [&interface-sub-decl [segment] [&void] "SlewToTargetAsync" (&arg-list) #f] [&interface-sub-decl [segment] [&void] "SlewToTarget" (&arg-list) #f] [&interface-sub-decl [segment] [&void] "SlewToCoordinatesAsync" (&arg-list [&arg (&byval) [&double] "RightAscension"] [&arg (&byval) [&double] "Declination"]) #f] [&interface-sub-decl [segment] [&void] "SlewToCoordinates" (&arg-list [&arg (&byval) [&double] "RightAscension"] [&arg (&byval) [&double] "Declination"]) #f] [&interface-sub-decl [segment] [&void] "SetupDialog" (&arg-list) #f] [&interface-sub-decl [segment] [&void] "SetPark" (&arg-list) #f] [&interface-sub-decl [segment] [&void] "PulseGuide" (&arg-list [&arg (&byval) [&type "GuideDirections"] "direction"] [&arg (&byval) [&long] "Duration"]) #f] [&interface-sub-decl [segment] [&void] "Park" (&arg-list) #f] [&interface-sub-decl [segment] [&void] "FindHome" (&arg-list) #f] [&interface-sub-decl [segment] [&string] "CommandString" (&arg-list [&arg (&byval) [&string] "command"] [&arg (&optional) (&byval) [&boolean] "Raw" #f]) #f] [&interface-sub-decl [segment] [&boolean] "CommandBool" (&arg-list [&arg (&byval) [&string] "command"] [&arg (&optional) (&byval) [&boolean] "Raw" #f]) #f] [&interface-sub-decl [segment] [&void] "CommandBlind" (&arg-list [&arg (&byval) [&string] "command"] [&arg (&optional) (&byval) [&boolean] "Raw" #f]) #f] [&interface-sub-decl [segment] [&void] "AbortSlew" (&arg-list) #f] [&interface-sub-decl [segment] [&long] "MoveMotor" (&arg-list [&arg [&long] "motor_id"] [&arg [&long] "hemisphere"] [&arg [&long] "direction"] [&arg [&long] "Steps"] [&arg [&long] "stepslowdown"]) #f] [&interface-sub-decl [segment] [&void] "PecMoveAxis" (&arg-list [&arg [&type "TelescopeAxes"] "axis"] [&arg [&double] "rate"]) #f] [&interface-sub-decl [segment] [&void] "SyncToAltAz" (&arg-list [&arg (&byval) [&double] "Azimuth"] [&arg (&byval) [&double] "altitude"]) #f] [&interface-sub-decl [segment] [&void] "SlewToAltAzAsync" (&arg-list [&arg (&byval) [&double] "Azimuth"] [&arg (&byval) [&double] "altitude"]) #f] [&interface-sub-decl [segment] [&void] "SlewToAltAz" (&arg-list [&arg (&byval) [&double] "Azimuth"] [&arg (&byval) [&double] "altitude"]) #f] [&interface-sub-decl [segment] [&void] "MoveAxis" (&arg-list [&arg [&type "TelescopeAxes"] "axis"] [&arg [&double] "rate"]) #f] [&interface-sub-decl [segment] [&long] "DestinationSideOfPier" (&arg-list [&arg (&byval) [&double] "destRa"] [&arg [&double] "destDec"]) #f] [&interface-sub-decl [segment] [&boolean] "CanMoveAxis" (&arg-list [&arg [&type "TelescopeAxes"] "axis"]) #f] [&interface-sub-decl [segment] [&object] "AxisRates" (&arg-list [&arg [&type "TelescopeAxes"] "axis"]) #f] [&vb-interface-prop (>>get) [segment] "PulseGuideRateDec" [&double]] [&vb-interface-prop (>>get) [segment] "PulseGuideRateRa" [&double]] [&vb-interface-prop (>>get) [segment] "DecNoAdjust" [&double]] [&vb-interface-prop (>>get) [segment] "IsPulseGuiding" [&boolean]] [&vb-interface-prop (>>all) [segment] "PecGain" [&double]] [&vb-interface-prop (>>get) [segment] "RAWormPeriodFloat" [&double]] [&vb-interface-prop (>>get) [segment] "RAWormPeriod" [&long]] [&vb-interface-prop (>>get) [segment] "SyncDECMotor" [&long]] [&vb-interface-prop (>>get) [segment] "SyncRAMotor" [&long]] [&vb-interface-prop (>>get) [segment] "DecEncoder" [&long]] [&vb-interface-prop (>>get) [segment] "raEncoder" [&long]] [&vb-interface-prop (>>get) [segment] "DECMotor" [&long]] [&vb-interface-prop (>>get) [segment] "ramotor" [&long]] [&vb-interface-prop (>>all) [segment] "UTCDate" [&date]] [&vb-interface-prop (>>all) [segment] "Tracking" [&boolean]] [&vb-interface-prop (>>all) [segment] "TargetRightAscension" [&double]] [&vb-interface-prop (>>all) [segment] "TargetDeclination" [&double]] [&vb-interface-prop (>>all) [segment] "SlewSettleTime" [&integer]] [&vb-interface-prop (>>get) [segment] "Slewing" [&boolean]] [&vb-interface-prop (>>all) [segment] "SiteLongitude" [&double]] [&vb-interface-prop (>>all) [segment] "SiteLatitude" [&double]] [&vb-interface-prop (>>all) [segment] "SiteElevation" [&double]] [&vb-interface-prop (>>get) [segment] "SiderealTime" [&double]] [&vb-interface-prop (>>all) [segment] "RightAscensionRate" [&double]] [&vb-interface-prop (>>get) [segment] "RightAscension" [&double]] [&vb-interface-prop (>>get) [segment] "name" [&string]] [&vb-interface-prop (>>get) [segment] "FocalLength" [&double]] [&vb-interface-prop (>>get) [segment] "DriverInfo" [&string]] [&vb-interface-prop (>>get) [segment] "Description" [&string]] [&vb-interface-prop (>>all) [segment] "DeclinationRate" [&double]] [&vb-interface-prop (>>get) [segment] "Declination" [&double]] [&vb-interface-prop (>>all) [segment] "Connected" [&boolean]] [&vb-interface-prop (>>get) [segment] "CanPulseGuide" [&boolean]] [&vb-interface-prop (>>get) [segment] "CanUnpark" [&boolean]] [&vb-interface-prop (>>get) [segment] "CanSync" [&boolean]] [&vb-interface-prop (>>get) [segment] "CanSlewAsync" [&boolean]] [&vb-interface-prop (>>get) [segment] "CanSlew" [&boolean]] [&vb-interface-prop (>>get) [segment] "CanSetTracking" [&boolean]] [&vb-interface-prop (>>get) [segment] "CanSetPark" [&boolean]] [&vb-interface-prop (>>get) [segment] "CanPark" [&boolean]] [&vb-interface-prop (>>get) [segment] "CanFindHome" [&boolean]] [&vb-interface-prop (>>get) [segment] "Azimuth" [&double]] [&vb-interface-prop (>>get) [segment] "ApertureArea" [&double]] [&vb-interface-prop (>>get) [segment] "ApertureDiameter" [&double]] [&vb-interface-prop (>>get) [segment] "altitude" [&double]] [&vb-interface-prop (>>all) [segment] "DoesRefraction" [&boolean]] [&vb-interface-prop (>>all) [segment] "TrackingRates" [&object]] [&vb-interface-prop (>>all) [segment] "TrackingRate" [&type "DriveRates"]] [&vb-interface-prop (>>all) [segment] "SideOfPier" [&type "PierSide"]] [&vb-interface-prop (>>get) [segment] "InterfaceVersion" [&integer]] [&vb-interface-prop (>>all) [segment] "GuideRateRightAscension" [&double]] [&vb-interface-prop (>>all) [segment] "GuideRateDeclination" [&double]] [&vb-interface-prop (>>get) [segment] "EquatorialSystem" [&type "EquatorialCoordinateType"]] [&vb-interface-prop (>>get) [segment] "DriverVersion" [&string]] [&vb-interface-prop (>>get) [segment] "CanSyncAltAz" [&boolean]] [&vb-interface-prop (>>get) [segment] "CanSlewAltAzAsync" [&boolean]] [&vb-interface-prop (>>get) [segment] "CanSlewAltAz" [&boolean]] [&vb-interface-prop (>>get) [segment] "CanSetRightAscensionRate" [&boolean]] [&vb-interface-prop (>>get) [segment] "CanSetPierSide" [&boolean]] [&vb-interface-prop (>>get) [segment] "CanSetGuideRates" [&boolean]] [&vb-interface-prop (>>get) [segment] "CanSetDeclinationRate" [&boolean]] [&vb-interface-prop (>>get) [segment] "AtPark" [&boolean]] [&vb-interface-prop (>>get) [segment] "AtHome" [&boolean]] [&vb-interface-prop (>>get) [segment] "AlignmentMode" [&type "AlignmentModes"]]]] [list* "Project1.Rates" [segment [&vb-interface-prop (>>get) [segment] "NewEnum" [&type "IUnknown"]] [&vb-interface-prop (>>get) [segment] "Count" [&long]] [&vb-interface-prop (>>get) [segment] "Item" [&arg (&byval) [&long] "Index"] [&type "rate"]]]] [list* "Project1.Rate" [segment [&vb-interface-prop (>>all) [segment] "Minimum" [&double]] [&vb-interface-prop (>>all) [segment] "Maximum" [&double]]]]]